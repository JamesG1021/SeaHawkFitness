{"name":"Seahawk Fitness","tagline":"This is a repository created for my software engineering and database implementation and design classes to develop a app for UNCW's recreation center.","body":"Name: Seahawk Fitness\r\n\r\nBrief description: An application to help streamline registration for events, classes and personal training offered at the recreation center at UNCW, assisting in renting equipment from the recreation center and overall operations of the campus rec center.\r\n\r\nSpecification of functional requirements:  Queries will be made to see if a users (students) time slot will fit a scheduled event into it without conflict as well as the instructor/trainers schedule. Queries will also be made to determine the status of rental equipment, whether it is available or currently rented as well as to who it is currently rented to. Data would be inserted retrieved and modified based on the acceptance of new students to the “university”, new instructors/trainers, classes that are currently being offered/ events held at the rec center and by Seahawks Adventures as well as new and old rental equipment being cycled in and out. \r\n\r\nUser interface specification: The user interface will be menu-based with sub menu options. It will start at a Login screen that will take a S_ID or I_ID and maybe a password. After logging into the app the user will land at a general directory page containing links to the hours, classes(group exercise), training, rentals, SeaHawk Adventures, and an Events schedule. When the user clicks on any of these given buttons/links they will be taken to a landing page for that page. Each page will then have other branches within it depending on the page and what is offered by the university. There will also be a management button on each page for administrative purposes that will cross check the id used to make sure that the proper users are able to make edits to the information provided by the app. \r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\n@Jamesg1021\r\n@Amandahharman\r\n@Scozzi\r\n@SeanAZeringue\r\n@EddieGalloway\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}